{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,W,OAAMH,EAAgBF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAAWG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,MAAUA,MAC5FU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,M,OAAYG,QAAQC,IAAI,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,UACtFM,OAAI,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,M,OAAYG,QAAQC,IAAI,sBAAqCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,UAG3Fd,EAAKqB,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBAMN,IAJA,IAAMC,GAAUxB,EAAKyB,SAASD,OAAOE,MAC/BC,GAAQ3B,EAAKyB,SAASE,KAAKD,MAC7BZ,GAASd,EAAKyB,SAASX,MAAMY,MAExBE,EAAI,EAAGA,GAAKJ,EAAQI,IAC3BzB,EAAcyB,EAAGd,GACjBA,GAASa,K","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => shouldResolve ? resolve({ position, delay }) : reject({ position, delay }), delay);\n  }).then(({ position, delay }) => console.log(`✅ Fulfilled promise ${position} in ${delay}ms`))\n    .catch(({ position, delay }) => console.log(`❌ Rejected promise ${position} in ${delay}ms`));\n};\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const amount = +form.elements.amount.value;\n  const step = +form.elements.step.value;\n  let delay = +form.elements.delay.value;\n  \n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay);\n    delay += step;\n  };\n});"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","console","log","concat","catch","addEventListener","event","preventDefault","amount","elements","value","step","i"],"version":3,"file":"03-promises.3f5a8305.js.map"}